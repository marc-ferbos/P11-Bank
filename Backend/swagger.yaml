swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error


  /accounts/{accountId}/transactions:
    get:
      tags:
        - transaction
      summary: Get transactions by Account ID
      description: Return all transactions of a specific account
      operationId: getTransactionsByAccountId
      parameters:
        - name: accountId
          in: path
          description: ID of the account to get all transactions
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Account ID
        '404':
          description: Account not found

  /transactions/{transactionId}:
    get:
      tags:
        - transaction
      summary: Get Transaction by ID
      description: Get a transaction by ID
      operationId: getTransactionById
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Transaction ID
        '404':
          description: Transaction not found
    put:
      security:
        - Bearer: []
      tags:
        - transaction
      summary: Update Transaction by ID
      description: Updates details of a transaction
      operationId: updateTransactionById
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Transaction object needed to be updated
          required: true
          schema:
            $ref: '#/definitions/TransactionEdit'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Transaction ID
        '404':
          description: Transaction not found

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      date:
        type: string
        format: date-time
        example: "2024-06-20T13:45:30"
      description:
        type: string
        example: "Payment for something"
      amount:
        type: number
        format: double
        example: $8.00
      balance:
        type: number
        format: double
        example: $298.00
      transactionType:
        type: string
        example: "electronic"
      category:
        type: string
        example: "Food"
      note:
        type: string
        example: "lorem ipsum"

  TransactionEdit:
    type: object
    properties:
      category:
        type: string
        example: "Food"
      note:
        type: string
        example: "lorem ipsum"